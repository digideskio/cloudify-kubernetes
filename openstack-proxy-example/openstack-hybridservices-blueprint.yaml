###########################################################
# This Blueprint installs the nodecellar application
# on prestarted Kubernetes cluster and mongodb on Openstack.
# The proxy pattern is used to connect the deployment
# running Kubernetes with the service deployment
###########################################################

tosca_definitions_version: cloudify_dsl_1_1

imports:  
  - http://getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - http://getcloudify.org/spec/openstack-plugin/1.2.1/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.2.1/plugin.yaml
  - plugins/cloudify-proxy-plugin/plugin.yaml
  - types/mongotypes.yaml
  - plugins/kube_plugin/plugin.yaml

inputs:

  image:
    description: >
      Image to be used when launching agent VM's

  flavor:
    description: >
      Flavor of the agent VM's

  agent_user:
    description: >
      User for connecting to agent VM's

  kub_deployment:
    description: >
      The Kubernetes deployment id

  mongo_deployment:
    description: >
      The MongoDb deployment id

node_templates:

  kubernetes_proxy:
    type: cloudify.nodes.DeploymentProxy
    properties:
      inherit_outputs:
        - 'kubernetes_info'
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            deployment_id: { get_input: kub_deployment }
        start:
          inputs:
            deployment_id: { get_input: kub_deployment }
        stop:
          inputs:
            deployment_id: { get_input: kub_deployment }

  mongo_proxy:
    type: cloudify.nodes.DeploymentProxy
    properties:
      inherit_outputs:
        - 'mongo_info'
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            deployment_id: { get_input: mongo_deployment }
        start:
          inputs:
            deployment_id: { get_input: mongo_deployment }
        stop:
          inputs:
            deployment_id: { get_input: mongo_deployment }

  nodecellar:
    type: cloudify.kubernetes.Microservice
    properties:
      name: nodecellar
      ssh_username: ubuntu
      ssh_keyfilename: /root/.ssh/agent_key.pem
      config_files:
        - file: pod.yaml
          overrides:
            - "['spec']['template']['spec']['containers'][0]['env'][1]['value'] = '@{mongo_proxy,mongo_info,ip}'"
            - "['spec']['template']['spec']['containers'][0]['env'][2]['value'] = '@{mongo_proxy,mongo_info,port}'"
            - "['spec']['template']['spec']['containers'][1]['env'][2]['value'] = '%{deployment.id}.%{node.id}.'"
        - file: service.yaml
          
    relationships:
      - type: cloudify.kubernetes.relationships.connected_to_master
        target: kubernetes_proxy
      - type: cloudify.relationships.connected_to_proxy
        target: mongo_proxy

#policies:
#  kub_scale_policy:
#    
#
#groups:
#  kub_scale_group:
#    members: [ nodecellar ]
#    policies:
#      scale_policy:
#        type: cloudify.policies.types.ewma_stabilized
#        properties:
#          service: ...
#          threshold: 
#        triggers:
#          execute_scale_workflow:
#            type: cloudify.policies.triggers.execute_workflow
#            parameters:
#              workflow: kube_scale
#              workflow_parameters:
#                master: kubernetes_proxy
#                ssh_user: ubuntu
#                ssh_keyfilename: /root/.ssh/agent_key.pem
#                name: nodecellar
#                amount: +1
#                
